{"version":3,"sources":["ClassComponent.js","FunctionalComponent.js","App.js","reportWebVitals.js","index.js"],"names":["ClassComponent","handleClick","setState","counter","state","console","log","className","this","onClick","React","Component","FunctionalComponent","useState","setCounter","text","setText","useEffect","type","value","onChange","e","target","App","isVisible","setVisible","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iOAqCeA,E,kDAlCb,aAAe,IAAD,8BACZ,gBAkBFC,YAAc,WACZ,EAAKC,SAAS,CAAEC,QAAS,EAAKC,MAAMD,QAAU,KAlB9C,EAAKC,MAAQ,CACXD,QAAS,GAHC,E,qDAOd,WACEE,QAAQC,IAAI,yB,gCAGd,WACED,QAAQC,IAAI,0B,kCAGd,WACED,QAAQC,IAAI,4B,oBAOd,WACE,OACE,sBAAKC,UAAU,QAAf,UACE,iDACA,2CAAcC,KAAKJ,MAAMD,WACzB,wBAAQM,QAASD,KAAKP,YAAtB,6B,GA7BqBS,IAAMC,WC8BpBC,EA9Ba,WAAO,IAAD,EACFC,mBAAS,GADP,mBACzBV,EADyB,KAChBW,EADgB,OAERD,mBAAS,IAFD,mBAEzBE,EAFyB,KAEnBC,EAFmB,KAQhCC,qBAAU,WACRZ,QAAQC,IAAI,2CACX,CAACH,IAEJc,qBAAU,WACRZ,QAAQC,IAAI,yCACX,CAACS,IAMJ,OACE,sBAAKR,UAAU,WAAf,UACE,sDACA,2CAAcJ,KACd,wBAAQM,QApBQ,WAClBK,EAAWX,EAAU,IAmBnB,sBACA,uBAAOe,KAAK,OAAOC,MAAOJ,EAAMK,SATf,SAACC,GACpBL,EAAQK,EAAEC,OAAOH,cCJNI,MAXf,WAAgB,IAAD,EACmBV,oBAAS,GAD5B,mBACNW,EADM,KACKC,EADL,KAEb,OACE,sBAAKlB,UAAU,MAAf,UACE,wBAAQE,QAAS,kBAAMgB,GAAYD,IAAnC,oBACCA,GAAa,cAAC,EAAD,IACbA,EAAY,cAAC,EAAD,IAA0B,SCE9BE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.5fa4a2a9.chunk.js","sourcesContent":["import React from 'react';\n\nclass ClassComponent extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      counter: 0,\n    };\n  }\n\n  componentDidMount() {\n    console.log('Component Did Mount');\n  }\n\n  componentDidUpdate() {\n    console.log('Component Did Update');\n  }\n\n  componentWillUnmount() {\n    console.log('Component Will Unmount');\n  }\n\n  handleClick = () => {\n    this.setState({ counter: this.state.counter + 1 });\n  };\n\n  render() {\n    return (\n      <div className=\"class\">\n        <h2>Class Component</h2>\n        <p>Counter : {this.state.counter}</p>\n        <button onClick={this.handleClick}>Increase</button>\n      </div>\n    );\n  }\n}\n\nexport default ClassComponent;\n","import { useEffect, useState, useRef } from 'react';\n\nconst FunctionalComponent = () => {\n  const [counter, setCounter] = useState(0);\n  const [text, setText] = useState('');\n\n  const handleClick = () => {\n    setCounter(counter + 1);\n  };\n\n  useEffect(() => {\n    console.log('Now we are using useEffect for button');\n  }, [counter]);\n\n  useEffect(() => {\n    console.log('Now we are using useEffect for text');\n  }, [text]);\n\n  const handleChange = (e) => {\n    setText(e.target.value);\n  };\n\n  return (\n    <div className=\"function\">\n      <h2>Functional Component</h2>\n      <p>Counter : {counter}</p>\n      <button onClick={handleClick}>Increase</button>\n      <input type=\"text\" value={text} onChange={handleChange} />\n    </div>\n  );\n};\n\nexport default FunctionalComponent;\n","import { useState } from 'react';\nimport ClassComponent from './ClassComponent';\nimport FunctionalComponent from './FunctionalComponent';\n\nfunction App() {\n  const [isVisible, setVisible] = useState(true);\n  return (\n    <div className=\"App\">\n      <button onClick={() => setVisible(!isVisible)}>Toggle</button>\n      {isVisible && <ClassComponent />}\n      {isVisible ? <FunctionalComponent /> : null}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}